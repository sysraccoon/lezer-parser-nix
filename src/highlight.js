import { styleTags, tags } from "@lezer/highlight"

export const nixHighlighting = styleTags({
  Identifier: tags.propertyName,
  String: tags.string,
  StringContent: tags.string,
  IndentedString: tags.string,
  IndentedStringContent: tags.string,
  Comment: tags.lineComment,
  CommentBlock: tags.blockComment,
  Float: tags.float,
  Int: tags.integer,
  NULL: tags.null,
  URI: tags.url,
  BitOp: tags.bitwiseOperator,
  LogicOp: tags.logicOperator,
  //SPath: tags.literal, // TODO what is stringpath? not implemented in nix.grammar
  Path: tags.literal,
  Equals: tags.definitionOperator,
  "StringInterpolationStart StringInterpolationEnd": tags.special(tags.brace),
  "PathLibrary PathAbsolute PathHome PathRelative": tags.special(tags.string),
  "true false": tags.bool,
  ": Spread": tags.punctuation,
  "( )": tags.paren,
  "{ }": tags.brace,
  "[ ]": tags.squareBracket,
  ".": tags.derefOperator,
  ", ;": tags.separator,
  "if then else": tags.controlKeyword,
  "import with let in rec builtins inherit assert or": tags.keyword,
})
